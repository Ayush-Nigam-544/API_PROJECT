---
# NGINX Load Balancer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-lb
  namespace: applications
  labels:
    app: nginx-lb
    tier: lb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-lb
  template:
    metadata:
      labels:
        app: nginx-lb
        tier: lb
    spec:
      nodeSelector:
        type: application  # Deploy on Node A with applications
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-logs
          mountPath: /var/log/nginx
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: nginx-logs
        emptyDir: {}
---
# NGINX Load Balancer Service (NodePort for external access)
apiVersion: v1
kind: Service
metadata:
  name: nginx-lb
  namespace: applications
  labels:
    app: nginx-lb
    tier: lb
spec:
  type: NodePort
  selector:
    app: nginx-lb
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 31080  # External access via localhost:31080 (avoid conflict with Docker)
    name: http
