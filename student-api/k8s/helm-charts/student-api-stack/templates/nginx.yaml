{{- if .Values.nginx.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "student-api-stack.fullname" . }}-nginx-config
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "student-api-stack.nginx.labels" . | nindent 4 }}
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream student_api {
            # Load balance between API instances
            server {{ include "student-api-stack.fullname" . }}-api.{{ .Values.namespace.name }}.svc.cluster.local:{{ .Values.studentApi.service.port }};
        }
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        
        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        server {
            listen {{ .Values.nginx.service.targetPort }};
            server_name _;
            
            # Health check endpoint for NGINX itself
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Metrics endpoint for Prometheus
            location /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                deny all;
            }
            
            # API endpoints
            location /api/ {
                # Rate limiting
                limit_req zone=api burst=20 nodelay;
                
                # Proxy settings
                proxy_pass http://student_api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeouts
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
                
                # Health check
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            }
            
            # Root endpoint redirect
            location = / {
                return 301 /api/v1/students;
            }
            
            # Default location
            location / {
                return 404 "Not Found\n";
                add_header Content-Type text/plain;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "student-api-stack.fullname" . }}-nginx
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "student-api-stack.nginx.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      {{- include "student-api-stack.nginx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "student-api-stack.nginx.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: nginx
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.nginx.service.targetPort }}
          protocol: TCP
        resources:
          {{- toYaml .Values.nginx.resources | nindent 10 }}
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: {{ include "student-api-stack.fullname" . }}-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "student-api-stack.fullname" . }}-nginx
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "student-api-stack.nginx.labels" . | nindent 4 }}
spec:
  type: {{ .Values.nginx.service.type }}
  ports:
    - port: {{ .Values.nginx.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "student-api-stack.nginx.selectorLabels" . | nindent 4 }}
{{- end }}
